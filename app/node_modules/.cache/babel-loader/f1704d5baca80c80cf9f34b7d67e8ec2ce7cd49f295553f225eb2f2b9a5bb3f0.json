{"ast":null,"code":"var _jsxFileName = \"C:\\\\bank-new\\\\bank\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport '../components/loginSignup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async () => {\n    // You would typically send the login data to a server for authentication.\n    // For now, let's assume a simple check with a hardcoded user.\n    if (username === 'sampleUser' && password === 'password') {\n      navigate('/dashboard'); // Redirect to the dashboard on successful login\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"username-input\",\n        type: \"text\",\n        placeholder: \"Enter your username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"password-input\",\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-cont\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-btn\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          className: \"signup-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"signup-btn\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"your-image-url.jpg\",\n        alt: \"Background\",\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"EgYjDAoSBrLcIIdUzvjslMz3nCA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nconst styles = `\n  .main-container {\n    margin: 140px;\n    display: flex;\n  }\n  .form-container {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding-right: 20px; /* Adjust the padding as needed */\n  }\n  .image-container {\n    flex: 1;\n    overflow: hidden;\n  }\n\n`;\nexport default Login;\n\n// The rest of your Login component can go here, if needed.\n// For example, you might want to include some container logic or routing logic.\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","jsxDEV","_jsxDEV","Login","onLogin","_s","navigate","username","setUsername","password","setPassword","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","to","src","alt","style","width","height","objectFit","_c","styles","$RefreshReg$"],"sources":["C:/bank-new/bank/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport '../components/loginSignup.css';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    // You would typically send the login data to a server for authentication.\r\n    // For now, let's assume a simple check with a hardcoded user.\r\n    if (username === 'sampleUser' && password === 'password') {\r\n      navigate('/dashboard'); // Redirect to the dashboard on successful login\r\n    } else {\r\n      alert('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='main-container'>\r\n      <div className='form-container'>\r\n        <h2>Login</h2>\r\n        <input\r\n          className='username-input'\r\n          type=\"text\"\r\n          placeholder=\"Enter your username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          className='password-input'\r\n          type=\"password\"\r\n          placeholder=\"Enter your password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <p>Forgot Password?</p>\r\n        <div className='btn-cont'>\r\n          <button className='login-btn' onClick={handleLogin}>\r\n            Login\r\n          </button>\r\n        </div>\r\n        <p>\r\n          Don't have an account?{' '}\r\n          <Link to=\"/signup\" className='signup-btn'>\r\n            <button className='signup-btn'>Sign up</button>\r\n          </Link>\r\n        </p>\r\n      </div>\r\n      <div className='image-container'>\r\n        {/* Add your image here */}\r\n        <img\r\n          src=\"your-image-url.jpg\"\r\n          alt=\"Background\"\r\n          style={{ width: '100%', height: '100%', objectFit: 'cover' }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = `\r\n  .main-container {\r\n    margin: 140px;\r\n    display: flex;\r\n  }\r\n  .form-container {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-right: 20px; /* Adjust the padding as needed */\r\n  }\r\n  .image-container {\r\n    flex: 1;\r\n    overflow: hidden;\r\n  }\r\n\r\n`;\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n// The rest of your Login component can go here, if needed.\r\n// For example, you might want to include some container logic or routing logic.\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}