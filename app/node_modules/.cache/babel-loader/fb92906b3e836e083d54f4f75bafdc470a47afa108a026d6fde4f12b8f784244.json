{"ast":null,"code":"var _jsxFileName = \"C:\\\\bank-new\\\\bank\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async () => {\n    // You would typically send the login data to a server for authentication.\n    // For now, let's assume a simple check with a hardcoded user.\n    if (username === 'sampleUser' && password === 'password') {\n      navigate('/dashboard'); // Redirect to the dashboard on successful login\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"username-input\",\n      type: \"text\",\n      placeholder: \"Enter your username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"password-input\",\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Forgot Password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-cont\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        className: \"signup-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"signup-btn\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"EgYjDAoSBrLcIIdUzvjslMz3nCA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nconst styles = `\n  .main-container {\n    margin: 140px;\n    display: flex;\n    flex-direction: column; \n  }\n  .main-container input {\n    margin-bottom: 30px;\n    padding: 15px;\n    border: 1px solid black;  \n    padding-right: 120px;\n    border-radius: 10px; \n  }\n  .main-container h2 {\n    align-items: center;\n    text-align: center;\n    margin-bottom: 40px;\n    font-size: 40px;\n    color: rgb(10, 66, 66);\n  }\n  .main-container p {\n    align-items: end;\n    text-align: end;\n    color: rgb(121, 120, 120);\n  }\n  .btn-cont {\n    align-items: center;\n    text-align: center;\n  }\n  .login-btn {\n    padding: 14px 150px 14px 150px;\n    background-color: rgb(10, 66, 66);\n    color: white;\n    margin-top: 10px;\n    border: 1px solid black;  \n    border-radius: 10px;\n    box-shadow: none;\n  }\n  .signup-btn {\n    background-color: rgb(255, 255, 255);\n    color: rgb(38, 93, 223);\n    border: 1px solid rgb(255, 255, 255);  \n    border-radius: 10px;\n    margin-top: 10px;\n    box-shadow: none;\n    font-size: 16px;\n  }\n`;\nexport default Login;\n\n// The rest of your Login component can go here, if needed.\n// For example, you might want to include some container logic or routing logic.\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","jsxDEV","_jsxDEV","Login","onLogin","_s","navigate","username","setUsername","password","setPassword","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","to","_c","styles","$RefreshReg$"],"sources":["C:/bank-new/bank/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    // You would typically send the login data to a server for authentication.\r\n    // For now, let's assume a simple check with a hardcoded user.\r\n    if (username === 'sampleUser' && password === 'password') {\r\n      navigate('/dashboard'); // Redirect to the dashboard on successful login\r\n    } else {\r\n      alert('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='main-container'>\r\n      <h2>Login</h2>\r\n      <input\r\n        className='username-input'\r\n        type=\"text\"\r\n        placeholder=\"Enter your username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}/>\r\n      <input\r\n        className='password-input'\r\n        type=\"password\"\r\n        placeholder=\"Enter your password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)} />\r\n      <p>Forgot Password?</p>\r\n      <div className='btn-cont'>\r\n        <button className='login-btn' onClick={handleLogin}>\r\n          Login\r\n        </button>\r\n      </div>\r\n      <p>\r\n        Don't have an account?{' '}\r\n        <Link to=\"/signup\" className='signup-btn'>\r\n          <button className='signup-btn'>Sign up</button>\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = `\r\n  .main-container {\r\n    margin: 140px;\r\n    display: flex;\r\n    flex-direction: column; \r\n  }\r\n  .main-container input {\r\n    margin-bottom: 30px;\r\n    padding: 15px;\r\n    border: 1px solid black;  \r\n    padding-right: 120px;\r\n    border-radius: 10px; \r\n  }\r\n  .main-container h2 {\r\n    align-items: center;\r\n    text-align: center;\r\n    margin-bottom: 40px;\r\n    font-size: 40px;\r\n    color: rgb(10, 66, 66);\r\n  }\r\n  .main-container p {\r\n    align-items: end;\r\n    text-align: end;\r\n    color: rgb(121, 120, 120);\r\n  }\r\n  .btn-cont {\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n  .login-btn {\r\n    padding: 14px 150px 14px 150px;\r\n    background-color: rgb(10, 66, 66);\r\n    color: white;\r\n    margin-top: 10px;\r\n    border: 1px solid black;  \r\n    border-radius: 10px;\r\n    box-shadow: none;\r\n  }\r\n  .signup-btn {\r\n    background-color: rgb(255, 255, 255);\r\n    color: rgb(38, 93, 223);\r\n    border: 1px solid rgb(255, 255, 255);  \r\n    border-radius: 10px;\r\n    margin-top: 10px;\r\n    box-shadow: none;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n\r\n\r\n// The rest of your Login component can go here, if needed.\r\n// For example, you might want to include some container logic or routing logic.\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}